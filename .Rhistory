dataset <- as.data.frame(cbind(strain,t(dataset)))
dataset
genes
fission.expresion <- assay(fission)
fission.expresion <- t(fission.expresion)
strain <- fission@colData@listData$strain
fission.genes.10 <- fission.expresion[,c("SPNCRNA.1080","SPAC186.08c","SPNCRNA.1420","SPCC70.08c")]
fission.genes.10 <- scale(as.matrix(fission.genes.10), center=TRUE, scale = TRUE)
dataset <- fission
strain <- dataset@colData@listData$strain
dataset <- scale(as.matrix(as.data.frame(SummarizedExperiment::assay(fission))[selection,]), center=TRUE, scale = TRUE)
dataset
dataset <- as.data.frame(cbind(strain,t(dataset)))
dataset
genes
fission.genes.10
fission.genes.10 <- fission.expresion[,c("SPNCRNA.1080","SPAC186.08c","SPNCRNA.1420","SPCC70.08c")]
fission.genes.10
as.data.frame(SummarizedExperiment::assay(fission))[selection,])
as.data.frame(SummarizedExperiment::assay(fission))[selection,]
t(as.matrix(as.data.frame(SummarizedExperiment::assay(fission))[selection,]))
fission.genes.10 <- fission.expresion[,c("SPNCRNA.1080","SPAC186.08c","SPNCRNA.1420","SPCC70.08c")]
fission.genes.10
dataset <- as.data.frame(cbind(strain,dataset))
dataset
dataset <- scale(t(as.matrix(as.data.frame(SummarizedExperiment::assay(fission))[selection,])), center=TRUE, scale = TRUE)
dataset
dataset <- as.data.frame(cbind(strain,dataset))
dataset
fission.genes.10 <- scale(as.matrix(fission.genes.10), center=TRUE, scale = TRUE)
genes <- cbind(strain,fission.genes.10)
genes
resultsT <- TpAUC(fission, low.value = 0, up.value = 0.25, plot = TRUE, selection = c("SPNCRNA.1080","SPAC186.08c","SPNCRNA.1420","SPCC70.08c","SPAC212.04c"))
library(ROCpIA)
data("fission")
fission.expresion <- assay(fission)
fission.expresion <- t(fission.expresion)
strain <- fission@colData@listData$strain
fission.genes.10 <- fission.expresion[,c("SPNCRNA.1080","SPAC186.08c","SPNCRNA.1420","SPCC70.08c")]
fission.genes.10 <- scale(as.matrix(fission.genes.10), center=TRUE, scale = TRUE)
genes <- cbind(strain,fission.genes.10)
TpAUC(genes,low.value = 0, up.value = 0.25, plot = TRUE)
resultsT <- TpAUC(fission, low.value = 0, up.value = 0.25, plot = TRUE, selection = c("SPNCRNA.1080","SPAC186.08c","SPNCRNA.1420","SPCC70.08c","SPAC212.04c"))
resultsT <- TpAUC(fission, low.value = 0, up.value = 0.25, plot = TRUE, selection = c("SPNCRNA.1080","SPAC186.08c","SPNCRNA.1420","SPCC70.08c","SPAC212.04c"))
fission
resultsT <- TpAUC(fission, low.value = 0, up.value = 0.25, plot = TRUE, selection = c("SPNCRNA.1080","SPAC186.08c","SPNCRNA.1420","SPCC70.08c","SPAC212.04c"))
library(ROCpIA)
data("fission")
resultsT <- TpAUC(fission, low.value = 0, up.value = 0.25, plot = TRUE, selection = c("SPNCRNA.1080","SPAC186.08c","SPNCRNA.1420","SPCC70.08c","SPAC212.04c"))
class(fission)
if (class(dataset)=="RangedSummarizedExperiment") {
strain <- dataset@colData@listData$strain
dataset <- as.data.frame(SummarizedExperiment::assay(dataset))
name.variable <- colnames(dataset)
dataset <- scale(t(as.matrix(dataset[selection,])), center=TRUE, scale = TRUE)
dataset <- as.data.frame(cbind(strain,dataset))
}
dataset <- fission
selection <- c("SPNCRNA.1080","SPAC186.08c","SPNCRNA.1420","SPCC70.08c")
if (class(dataset)=="RangedSummarizedExperiment") {
strain <- dataset@colData@listData$strain
dataset <- as.data.frame(SummarizedExperiment::assay(dataset))
name.variable <- colnames(dataset)
dataset <- scale(t(as.matrix(dataset[selection,])), center=TRUE, scale = TRUE)
dataset <- as.data.frame(cbind(strain,dataset))
}
dataset
TpAUC(genes,low.value = 0, up.value = 0.25, plot = TRUE)
TpAUC(genes,low.value = 0, up.value = 0.25, plot = TRUE,
selection = c("SPNCRNA.1080","SPAC186.08c","SPNCRNA.1420","SPCC70.08c"))
resultsT <- TpAUC(fission, low.value = 0, up.value = 0.25, plot = TRUE,
selection = c("SPNCRNA.1080","SPAC186.08c","SPNCRNA.1420","SPCC70.08c","SPAC212.04c"))
resultsT
fission
resultsT <- TpAUC(fission, low.value = 0, up.value = 0.25, plot = TRUE)
resultsT <- TpAUC(fission, low.value = 0, up.value = 0.25, plot = TRUE,
selection = c("SPNCRNA.1080"))
resultsT <- TpAUC(fission, low.value = 0, up.value = 0.25, plot = TRUE,
selection = c(1,2))
name.variable <- colnames(dataset[selection,])
name.variable
strain <- dataset@colData@listData$strain
data("fission")
dataset <- fission
strain <- dataset@colData@listData$strain
strain
dataset <- as.data.frame(SummarizedExperiment::assay(dataset))
dataset
name.variable <- colnames(dataset[selection,])
name.variable
selection = c("SPNCRNA.1080","SPAC186.08c","SPNCRNA.1420","SPCC70.08c")
selection
name.variable <- colnames(dataset[selection,])
name.variable
dataset[selection,])
dataset[selection,]
dataset[,selection]
dataset
dataset[selection,]
as.matrix(dataset[selection,]
as.matrix(dataset[selection,])
as.matrix(dataset[selection,])
t(as.matrix(dataset[selection,]))
dataset <- scale(t(as.matrix(dataset[selection,])), center=TRUE, scale = TRUE)
as.data.frame(cbind(strain,dataset)
as.data.frame(cbind(strain,dataset))
as.data.frame(cbind(strain,dataset))
library(ROCpIA)
detach("package:ROCpIA", unload = TRUE)
detach("package:ROCpAI", unload = TRUE)
library(ROCpAI)
data("fission")
TpAUC(fission,low.value = 0, up.value = 0.25, plot = TRUE,
selection = c("SPNCRNA.1080","SPAC186.08c","SPNCRNA.1420","SPCC70.08c"))
library(ROCpAI)
data("fission")
library(fission)
data("fission")
TpAUC(fission,low.value = 0, up.value = 0.25, plot = TRUE,
selection = c("SPNCRNA.1080","SPAC186.08c","SPNCRNA.1420","SPCC70.08c"))
fission
resultsT <- TpAUC(fission, low.value = 0, up.value = 0.25, plot = TRUE,
selection = c("SPNCRNA.1080"))
library(ROCpAI)
library(ROCpAI)
library(ROCpAI)
library(fission)
data("fission")
TpAUC(fission,low.value = 0, up.value = 0.25, plot = TRUE,
selection = c("SPNCRNA.1080","SPAC186.08c","SPNCRNA.1420","SPCC70.08c"))
selection = c(SPAC186.08c","SPNCRNA.1420","SPCC70.08c"))
TpAUC(fission,low.value = 0, up.value = 0.25, plot = TRUE,
selection = c("SPNCRNA.1080","SPAC186.08c","SPNCRNA.1420","SPCC70.08c"))
TpAUC(fission,low.value = 0, up.value = 0.25, plot = TRUE,
selection = c("SPAC186.08c","SPNCRNA.1420","SPCC70.08c"))
dataset <- fission
if (class(dataset)=="RangedSummarizedExperiment") {
strain <- dataset@colData@listData$strain
dataset <- as.data.frame(SummarizedExperiment::assay(dataset))
name.variable <- colnames(dataset[selection,])
dataset <- scale(t(as.matrix(dataset[selection,])), center=TRUE, scale = TRUE)
dataset <- as.data.frame(cbind(strain,dataset))
}
selection <- c("SPNCRNA.1080","SPAC186.08c","SPNCRNA.1420","SPCC70.08c")
if (class(dataset)=="RangedSummarizedExperiment") {
strain <- dataset@colData@listData$strain
dataset <- as.data.frame(SummarizedExperiment::assay(dataset))
name.variable <- colnames(dataset[selection,])
dataset <- scale(t(as.matrix(dataset[selection,])), center=TRUE, scale = TRUE)
dataset <- as.data.frame(cbind(strain,dataset))
}
dataset
library(ROCpAI)
library(fission)
data("fission")
TpAUC(fission,low.value = 0, up.value = 0.25, plot = TRUE,
selection = c("SPNCRNA.1080","SPAC186.08c","SPNCRNA.1420","SPCC70.08c"))
resultsT <- TpAUC(fission, low.value = 0, up.value = 0.25, plot = TRUE,
selection = c("SPNCRNA.1080"))
x <- assay(resultT)
x <- assay(resultsT)
x$St_pAUC
x$St_pAUC
fission.expresion <- assay(fission)
fission.expresion <- t(fission.expresion)
strain <- fission@colData@listData$strain
fission.genes.10 <- fission.expresion[,c("SPNCRNA.1080","SPAC186.08c","SPNCRNA.1420","SPCC70.08c")]
fission.genes.10 <- scale(as.matrix(fission.genes.10), center=TRUE, scale = TRUE)
genes <- cbind(strain,fission.genes.10)
TpAUC(genes,low.value = 0, up.value = 0.25, plot = TRUE)
if (class(dataset)=="RangedSummarizedExperiment") {
strain <- dataset@colData@listData$strain
dataset <- as.data.frame(SummarizedExperiment::assay(dataset))
name.variable <- colnames(dataset[selection,])
dataset <- scale(t(as.matrix(dataset[selection,])), center=TRUE, scale = TRUE)
dataset <- as.data.frame(cbind(strain,dataset))
}
dataset <- fission
strain <- dataset@colData@listData$strain
dataset <- as.data.frame(SummarizedExperiment::assay(dataset))
name.variable <- colnames(dataset[selection,])
selection <- c("SPNCRNA.1080","SPAC186.08c","SPNCRNA.1420","SPCC70.08c")
dataset <- scale(t(as.matrix(dataset[selection,])), center=TRUE, scale = TRUE)
name.variable <- colnames(dataset[selection,])
dataset
name.variable <- colnames(dataset)
name.variable
resultsT <- TpAUC(fission, low.value = 0, up.value = 0.25, plot = TRUE, selection = c("SPNCRNA.1080","SPAC186.08c"))
resultsMC <- McpAUC(fission, low.value = 0, up.value = 0.25, plot = TRUE, selection = c("SPNCRNA.1080","SPAC186.08c"))
library(ROCpAI)
library(ROCpAI)
library(fission)
data("fission")
resultsT <- TpAUC(fission, low.value = 0, up.value = 0.25, plot = TRUE, selection = c("SPNCRNA.1080","SPAC186.08c"))
resultsMC <- McpAUC(fission, low.value = 0, up.value = 0.25, plot = TRUE, selection = c("SPNCRNA.1080","SPAC186.08c"))
selection <- c("SPNCRNA.1080","SPAC186.08c","SPNCRNA.1420","SPCC70.08c")
dataset <- fission
strain <- dataset@colData@listData$strain
strain
dataset <- as.data.frame(SummarizedExperiment::assay(dataset))
dataset <- scale(t(as.matrix(dataset[selection,])), center=TRUE, scale = TRUE)
name.variable <- colnames(dataset)
name.variable
resultsT <- TpAUC(fission, low.value = 0, up.value = 0.25, plot = TRUE, selection = c("SPNCRNA.1080","SPAC186.08c"))
library(ROCpAI)
library(ROCpAI)
library(fission)
data("fission")
resultsT <- TpAUC(fission, low.value = 0, up.value = 0.25, plot = TRUE, selection = c("SPNCRNA.1080","SPAC186.08c"))
resultstboot<- TpAUCboot(fission,low.value = 0, up.value = 0.25, seed = 1234, selection = c("SPNCRNA.1080","SPAC186.08c"))
resultsMCboot <- MCpAUCboot(fission,low.value = 0, up.value = 0.25, seed = 1234, selection = c("SPNCRNA.1080","SPAC186.08c"))
library(ROCpAI)
BiocManager::library("fission")
BiocManager::install("fission")
library(MultiAssayExperiment)
library(ROCpAI)
library(fission)
library(ROCpAI)
data("fission")
data("fission")
resultsT <- TpAUC(fission, low.value = 0, up.value = 0.25, plot = TRUE, selection = c("SPNCRNA.1080","SPAC186.08c"))
resultsT
strain <- dataset@colData@listData$strain
dataset <- fission
strain <- dataset@colData@listData$strain
strain
pointsCurve<- points_curve(strain, assay(fussion)[,"SPNCRNA.1080"])
pointsCurve<- points_curve(strain, assay(fission)[,"SPNCRNA.1080"])
assay(fission)
pointsCurve<- points_curve(strain, t(assay(fission))[,"SPNCRNA.1080"])
pointsCurve
strain <- dataset@colData@listData$strain
library(ROCpAI)
library(ROCpAI)
library(ROCpAI)
library(biocheck)
library(BiocCheck)
library(BiocCheck)
BiocCheck(.)
BiocCheck(".")
BiocCheck(".")
BiocCheck(".")
library(ROCpAI)
BiocCheck(".")
BiocCheck(".")
BiocCheck(".")
library(ROCpAI)
BiocCheck(".")
BiocCheck(".")
library(ROCpAI)
library(ROCpAI)
BiocCheck(".")
BiocCheck(".")
library(ROCpAI)
BiocCheck(".")
library(ROCpAI)
BiocCheck(".")
BiocCheck(".")
install.packages(Rtools)
install.packages("Rtools")
install.packages("BiocManager")
BiocManager::install("SummarizedExperiment")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
{install.packages("BiocManager")}
install.packages("BiocManager")
BiocManager::install("SummarizedExperiment")
install.packages(fission)
install.packages("fission")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("fission")
BiocManager::install("fission")
library(fission)
library(boot)
library(SummarizedExperiment)
BiocManager::install("fission")
library(fission)
BiocManager::install("fission")
BiocManager::install("fission")
BiocManager::install("GenomicInfoDb")
library(fission)
library(GenomeInfoDb)
library(GenomeInfoDbData)
install.packages(RCurl)
install.packages("RCurl")
BiocManager::install("GenomeInfoDb")
library(ROCpAI)
resultMc <- McpAUC(genes, low.value = 0, up.value = 0.25, plot=TRUE)
BiocStyle::markdown()
library(boot)
library(fission)
library(SummarizedExperiment)
portion_ROC <- function(up.limit, low.limit, fpr.roc,sen.roc){
i.low<-min(which(fpr.roc >= low.limit))
j.low<-max(i.low-1, 1)
i.up<-max(which(fpr.roc <= up.limit))
j.up<-min(1+i.up, length(fpr.roc))
fpr.proc<-fpr.roc[i.low:i.up]
sen.proc<-sen.roc[i.low:i.up]
if (fpr.roc[i.low] > low.limit) {
fpr.proc<-append(fpr.proc, low.limit, 0)
sen.proc<-append(sen.proc, sen.roc[j.low]+(sen.roc[i.low]-sen.roc[j.low])*(fpr.proc[1]-fpr.roc[j.low])/(fpr.roc[i.low]-fpr.roc[j.low]), 0)}
if (fpr.roc[i.up] < up.limit) {
fpr.proc<-append(fpr.proc, up.limit, length(fpr.proc))
sen.proc<-append(sen.proc, sen.roc[j.up]-(sen.roc[j.up]-sen.roc[i.up])*(fpr.roc[j.up]-fpr.proc[length(fpr.proc)])/(fpr.roc[j.up]-fpr.roc[i.up]), length(sen.proc))}
return(cbind(fpr.proc, sen.proc))
}
classification_Tp <- function(fpr.proc,sen.proc){
if (all(sen.proc>=fpr.proc)) {
proper.proc<-TRUE} else {proper.proc<-FALSE}
plr.proc<-(sen.proc-sen.proc[1])/(fpr.proc-fpr.proc[1])
plr.proc<-plr.proc[is.finite(plr.proc)]
if (all(plr.proc>=plr.proc[length(plr.proc)])) {
plr.proc.bounded<-TRUE} else {plr.proc.bounded<-FALSE}
classification <- c(plr.proc.bounded,proper.proc)
return(classification)
}
#Tighter partial area under a portion
TpA <- function(fpr.proc, sen.proc){
pA.roc <- pA(fpr.proc, sen.proc)
type_roc <- classification_Tp(fpr.proc, sen.proc)
min.pAUC<-sum(diff(fpr.proc^2))/2
max.pAUC<-sum(diff(fpr.proc))
TpAUC.max.roc<-max.pAUC*max(sen.proc)
if (min(sen.proc) == max(sen.proc) ) {
TpAUC.min.roc =0} else {
if (type_roc[1]) {
TpAUC.min.roc<-sum(diff(fpr.proc))*mean(c(min(sen.proc), max(sen.proc)))
} else {
if (type_roc[2]) {
TpAUC.min.roc<-max(max.pAUC*min(sen.proc), min.pAUC)
} else {TpAUC.min.roc<-max.pAUC*min(sen.proc)}
}
}
if (min(fpr.proc) == max(fpr.proc) ) { TpAUC.max.roc = 1}
if (max(sen.proc)!=0 )
{TpA.roc<-(1+((pA.roc-TpAUC.min.roc)/(TpAUC.max.roc-TpAUC.min.roc)))/2} else {TpA.roc=0}
return(TpA.roc)
}
#Calculate the partial area under a portion
pA <- function(fpr.proc,sen.proc){
aux <- sum(diff(fpr.proc)*
apply(cbind(sen.proc[-1],
sen.proc[-length(sen.proc)]), 1, mean))
return(aux)
}
#McClish partial area under a portion
MCpA <- function(sen.proc,fpr.proc){
pA.roc <- pA(fpr.proc, sen.proc)
type_roc <- classification_Tp(fpr.proc, sen.proc)
max.pAUC <- sum(diff(fpr.proc))
min.pAUC <- sum(diff(fpr.proc^2))/2
if (type_roc[2]) {
if (min(fpr.proc) == max(fpr.proc) ) { max.pAUC = 1}
MCpA.roc<-(1+((pA.roc-min.pAUC)/(max.pAUC-min.pAUC)))/2
} else {
MCpA.roc<-NA}
return(MCpA.roc)
}
fbootT<- function(dataset,bssample, low.limit, up.limit){
SpAUC <- NULL
bsdata <- dataset[bssample,]
for (i in 2:dim(bsdata)[2]) {
bsdata_temp <- cbind(bsdata[,1],bsdata[,i])
sen.roc<- points_curve(bsdata_temp[,1],bsdata_temp[,2])[,2]
fpr.roc<- points_curve(bsdata_temp[,1],bsdata_temp[,2])[,1]
fpr.proc <- portion_ROC(up.limit, low.limit, fpr.roc,sen.roc)[,1]
sen.proc <- portion_ROC(up.limit, low.limit, fpr.roc,sen.roc)[,2]
SpAUC[i-1] <- TpA(fpr.proc,sen.proc)
}
return(SpAUC)
}
fbootM<- function(dataset,bssample, low.limit, up.limit){
SpAUC <- NULL
bsdata <- dataset[bssample,]
for (i in 2:dim(bsdata)[2]) {
bsdata_temp <- cbind(bsdata[,1],bsdata[,i])
sen.roc<- points_curve(bsdata_temp[,1],bsdata_temp[,2])[,2]
fpr.roc<- points_curve(bsdata_temp[,1],bsdata_temp[,2])[,1]
fpr.proc <- portion_ROC(up.limit, low.limit, fpr.roc,sen.roc)[,1]
sen.proc <- portion_ROC(up.limit, low.limit, fpr.roc,sen.roc)[,2]
SpAUC[i-1] <- MCpA(sen.proc,fpr.proc)
}
return(SpAUC)
}
createSE <- function(object, names){
names(object) <- names
names <- names
data.matrix <- as.matrix(object)
se=SummarizedExperiment::SummarizedExperiment(assays=data.matrix,
colData<-data.frame(metrics = (names)))
names(se@assays$data@listData[[1]]) <- names
return(se)
}
library(fission)
library(ROCpAI)
data("fission")
fission.expresion <- assay(fission)
fission.expresion <- t(fission.expresion)
strain <- fission@colData@listData$strain
fission.genes.10 <- fission.expresion[,c("SPNCRNA.1080","SPAC186.08c","SPNCRNA.1420","SPCC70.08c","SPAC212.04c")]
genes <- cbind(strain,fission.genes.10)
colnames(genes) <- c("Strain", "Gene1", "Gene2", "Gene3", "Gene4", "Gene5"  )
genes
points_curve<-function(x, y){
xsample <- NULL; ysample <- NULL
xsample <- cbind(x[which(is.na(x)==FALSE & is.na(y)==FALSE)])
ysample <- y[which(is.na(x)==FALSE & is.na(y)==FALSE)]
points<-NULL; pre.point<-NULL; fpr.point<-NULL; sen.point<-NULL; xy<-NULL
points<-sort(ysample)
points<-append(points[-length(points)]+diff(points)/2, min(points)-1, 0)
points<-append(points, max(ysample)+1, length(points))
for (point in points) {
pre.point<-(ysample>point)*1
fpr.point[which(points == point)]<-sum((pre.point == 1)*(xsample == 1))/sum(xsample == 1)
sen.point[which(points == point)]<-sum((pre.point == 1)*(xsample == 2))/sum(xsample == 2)
}
if (is.unsorted(sen.point)) {
sen.point<-rev(sen.point)
fpr.point<-rev(fpr.point)}
xy<-cbind(fpr.point, sen.point)
return(xy)
}
points_curve(genes[,1], genes[,2])
McpAUC <- function(dataset,  low.value=NULL, up.value=NULL, plot=FALSE, selection = NULL) {
St_pAUC <-NULL; pAUC <- NULL; sensitivity <- NULL; FPR <- NULL;
fpr.proc<-NULL; sen.proc<-NULL;  up.limit <- NULL; low.limit <- NULL
Ap.roc<-NULL;   object <- NULL;par(new=FALSE);  par <- NULL; legend <- NULL; abline <- NULL;
if (class(dataset)=="RangedSummarizedExperiment") {
strain <- dataset@colData@listData$strain
dataset <- as.data.frame(SummarizedExperiment::assay(dataset))
dataset <- scale(t(as.matrix(dataset[selection,])), center=TRUE, scale = TRUE)
name.variable <- colnames(dataset)
dataset <- as.data.frame(cbind(strain,dataset))
}  else {  dataset <- as.data.frame(dataset)
name.variable <- colnames(dataset)
}
dimension <- dim(dataset)
if(dimension[2]<2) {stop("database has to have at least 2 colums")}
for (i in 2:dimension[2]) {
dataset_temporal <- cbind(dataset[,1],dataset[i])
sen.roc<- points_curve(dataset_temporal[,1],dataset_temporal[,2])[,2]
fpr.roc<- points_curve(dataset_temporal[,1],dataset_temporal[,2])[,1]
## Variables and initial values for the partial area of each ROC curve
### PARTIAL ROC curve (fpr.proc; sen.proc) on [lower.fp <= e <= upper.fp]
if (!is.null(up.value)){up.limit <- up.value}else{up.limit <- 1}
if (!is.null(low.value)){low.limit <- low.value}else{low.limit <- 0}
fpr.proc <- portion_ROC(up.limit, low.limit, fpr.roc,sen.roc)[,1]
sen.proc <- portion_ROC(up.limit, low.limit, fpr.roc,sen.roc)[,2]
### TYPE OF PORTION ROC curve on [lower.fp <= e <= upper.fp]
### BOUNDS FOR PARTIAL AREA INDEXES: MIN & MAX boundaries for TpAUC index
St_pAUC[[i-1]] <- MCpA(sen.proc,fpr.proc)
pAUC[[i-1]] <- as.vector(pA(fpr.proc,sen.proc))
sensitivity[[i-1]] <-as.vector(sen.proc)
FPR[[i-1]] <- as.vector(fpr.proc)
if (isTRUE(plot)) {plot(sen.roc~fpr.roc, type="l", col=i, ylab="TPR", xlab="FPR")
legend(x= "bottomright",legend = name.variable[1:i-1], fill = 2:i, cex = 0.8)
abline(a=c(0,1),lwd=1, col="grey")
abline(v=low.value,col="black")
abline(v=up.value,col="black")
par(new=TRUE)
}
}
object <- list(St_pAUC, pAUC, sensitivity, FPR)
names <- c("St_pAUC","pAUC", "Sensitivity", "FPR")
se <- createSE(object, names)
return(se)
}
resultMc <- McpAUC(genes, low.value = 0, up.value = 0.25, plot=TRUE)
resultMc
library(ROCpAI)
resultMc <- McpAUC(genes, low.value = 0, up.value = 0.25, plot=TRUE)
createSE <- function(object, names){
names(object) <- names
names <- names
data.matrix <- as.matrix(object)
#cambiar
se=SummarizedExperiment::SummarizedExperiment(assays=data.matrix,
colData<-data.frame(metrics = (names)))
names(se@assays$data@listData[[1]]) <- names
return(se)
}
names(object) <- names
object <- list(St_pAUC, pAUC, sensitivity, FPR)
St_pAUC <- 01
pAUC <- 74
sensitivity <- 65
FPR <- 55
object <- list(St_pAUC, pAUC, sensitivity, FPR)
names(object) <- names
names <- c("St_pAUC","pAUC", "Sensitivity", "FPR")
names(object) <- names
data.matrix <- as.matrix(object)
data.matrix
#cambiar
se=SummarizedExperiment::SummarizedExperiment(assays=data.matrix,
colData<-data.frame(metrics = (names)))
names(se@assays$data@listData[[1]]) <- names
se
se@assays
se@assays$data
se@assays
names(se@assays@data@listData[[1]]) <- names
BiocCheck(".")
install_github("/juanpegarcia/ROCpAI")
library(devtools)
install_github("/juanpegarcia/ROCpAI")
install_github("juanpegarcia/ROCpAI")
BiocCheck(".")
BiocManager::install("BiocCheck")
BiocManager::install("BiocCheck")
